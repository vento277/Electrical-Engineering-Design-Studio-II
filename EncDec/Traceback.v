// -------------------------------------------------------------
// 
// File Name: C:\Users\TEMP\Desktop\fina\hdlcoder_commviterbi\Traceback.v
// Created: 2024-06-14 20:40:48
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Traceback
// Source Path: hdlcoder_commviterbi/Subsystem/Viterbi Decoder/Traceback
// Hierarchy Level: 2
// 
// Traceback Decoding
// Connects traceback units and adds 4 pipeline registers
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Traceback
          (clk,
           reset,
           enb,
           dec_0,
           dec_1,
           dec_2,
           dec_3,
           idx,
           decoded);


  input   clk;
  input   reset;
  input   enb;
  input   dec_0;  // ufix1
  input   dec_1;  // ufix1
  input   dec_2;  // ufix1
  input   dec_3;  // ufix1
  input   [1:0] idx;  // ufix2
  output  decoded;  // ufix1


  wire dec1_0;  // ufix1
  wire dec1_1;  // ufix1
  wire dec1_2;  // ufix1
  wire dec1_3;  // ufix1
  wire [1:0] idx1;  // ufix2
  wire dec2_0;  // ufix1
  wire dec2_1;  // ufix1
  wire dec2_2;  // ufix1
  wire dec2_3;  // ufix1
  wire [1:0] idx2;  // ufix2
  wire dec3_0;  // ufix1
  wire dec3_1;  // ufix1
  wire dec3_2;  // ufix1
  wire dec3_3;  // ufix1
  wire [1:0] idx3;  // ufix2
  wire dec4_0;  // ufix1
  wire dec4_1;  // ufix1
  wire dec4_2;  // ufix1
  wire dec4_3;  // ufix1
  wire [1:0] idx4;  // ufix2
  wire [0:3] dec4;  // ufix1 [4]
  reg  [0:3] decpipereg1;  // ufix1 [4]
  reg [1:0] idxpipereg1;  // ufix2
  wire dec5_0;  // ufix1
  wire dec5_1;  // ufix1
  wire dec5_2;  // ufix1
  wire dec5_3;  // ufix1
  wire [1:0] idx5;  // ufix2
  wire dec6_0;  // ufix1
  wire dec6_1;  // ufix1
  wire dec6_2;  // ufix1
  wire dec6_3;  // ufix1
  wire [1:0] idx6;  // ufix2
  wire dec7_0;  // ufix1
  wire dec7_1;  // ufix1
  wire dec7_2;  // ufix1
  wire dec7_3;  // ufix1
  wire [1:0] idx7;  // ufix2
  wire dec8_0;  // ufix1
  wire dec8_1;  // ufix1
  wire dec8_2;  // ufix1
  wire dec8_3;  // ufix1
  wire [1:0] idx8;  // ufix2
  wire [0:3] dec8;  // ufix1 [4]
  reg  [0:3] decpipereg2;  // ufix1 [4]
  reg [1:0] idxpipereg2;  // ufix2
  wire dec9_0;  // ufix1
  wire dec9_1;  // ufix1
  wire dec9_2;  // ufix1
  wire dec9_3;  // ufix1
  wire [1:0] idx9;  // ufix2
  wire dec10_0;  // ufix1
  wire dec10_1;  // ufix1
  wire dec10_2;  // ufix1
  wire dec10_3;  // ufix1
  wire [1:0] idx10;  // ufix2
  wire dec11_0;  // ufix1
  wire dec11_1;  // ufix1
  wire dec11_2;  // ufix1
  wire dec11_3;  // ufix1
  wire [1:0] idx11;  // ufix2
  wire dec12_0;  // ufix1
  wire dec12_1;  // ufix1
  wire dec12_2;  // ufix1
  wire dec12_3;  // ufix1
  wire [1:0] idx12;  // ufix2
  wire [0:3] dec12;  // ufix1 [4]
  reg  [0:3] decpipereg3;  // ufix1 [4]
  reg [1:0] idxpipereg3;  // ufix2
  wire dec13_0;  // ufix1
  wire dec13_1;  // ufix1
  wire dec13_2;  // ufix1
  wire dec13_3;  // ufix1
  wire [1:0] idx13;  // ufix2
  wire dec14_0;  // ufix1
  wire dec14_1;  // ufix1
  wire dec14_2;  // ufix1
  wire dec14_3;  // ufix1
  wire [1:0] idx14;  // ufix2
  wire dec15_0;  // ufix1
  wire dec15_1;  // ufix1
  wire dec15_2;  // ufix1
  wire dec15_3;  // ufix1
  wire [1:0] idx15;  // ufix2
  wire dec16deadOut_0;  // ufix1
  wire dec16deadOut_1;  // ufix1
  wire dec16deadOut_2;  // ufix1
  wire dec16deadOut_3;  // ufix1
  wire [1:0] idx16;  // ufix2
  reg [1:0] idxpipereg4;  // ufix2


  // Traceback Component1
  TracebackUnit u_TracebackComp_inst1 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(dec_0),  // ufix1
                                       .dec_in_1(dec_1),  // ufix1
                                       .dec_in_2(dec_2),  // ufix1
                                       .dec_in_3(dec_3),  // ufix1
                                       .idx_in(idx),  // ufix2
                                       .dec_out_0(dec1_0),  // ufix1
                                       .dec_out_1(dec1_1),  // ufix1
                                       .dec_out_2(dec1_2),  // ufix1
                                       .dec_out_3(dec1_3),  // ufix1
                                       .idx_out(idx1)  // ufix2
                                       );

  // Traceback Component2
  TracebackUnit u_TracebackComp_inst2 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(dec1_0),  // ufix1
                                       .dec_in_1(dec1_1),  // ufix1
                                       .dec_in_2(dec1_2),  // ufix1
                                       .dec_in_3(dec1_3),  // ufix1
                                       .idx_in(idx1),  // ufix2
                                       .dec_out_0(dec2_0),  // ufix1
                                       .dec_out_1(dec2_1),  // ufix1
                                       .dec_out_2(dec2_2),  // ufix1
                                       .dec_out_3(dec2_3),  // ufix1
                                       .idx_out(idx2)  // ufix2
                                       );

  // Traceback Component3
  TracebackUnit u_TracebackComp_inst3 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(dec2_0),  // ufix1
                                       .dec_in_1(dec2_1),  // ufix1
                                       .dec_in_2(dec2_2),  // ufix1
                                       .dec_in_3(dec2_3),  // ufix1
                                       .idx_in(idx2),  // ufix2
                                       .dec_out_0(dec3_0),  // ufix1
                                       .dec_out_1(dec3_1),  // ufix1
                                       .dec_out_2(dec3_2),  // ufix1
                                       .dec_out_3(dec3_3),  // ufix1
                                       .idx_out(idx3)  // ufix2
                                       );

  // Traceback Component4
  TracebackUnit u_TracebackComp_inst4 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(dec3_0),  // ufix1
                                       .dec_in_1(dec3_1),  // ufix1
                                       .dec_in_2(dec3_2),  // ufix1
                                       .dec_in_3(dec3_3),  // ufix1
                                       .idx_in(idx3),  // ufix2
                                       .dec_out_0(dec4_0),  // ufix1
                                       .dec_out_1(dec4_1),  // ufix1
                                       .dec_out_2(dec4_2),  // ufix1
                                       .dec_out_3(dec4_3),  // ufix1
                                       .idx_out(idx4)  // ufix2
                                       );

  assign dec4[0] = dec4_0;
  assign dec4[1] = dec4_1;
  assign dec4[2] = dec4_2;
  assign dec4[3] = dec4_3;

  // Decision pipeline register1
  always @(posedge clk or posedge reset)
    begin : decpipelineregister_process
      if (reset == 1'b1) begin
        decpipereg1[0] <= 1'b0;
        decpipereg1[1] <= 1'b0;
        decpipereg1[2] <= 1'b0;
        decpipereg1[3] <= 1'b0;
      end
      else begin
        if (enb) begin
          decpipereg1[0] <= dec4[0];
          decpipereg1[1] <= dec4[1];
          decpipereg1[2] <= dec4[2];
          decpipereg1[3] <= dec4[3];
        end
      end
    end



  // Index pipeline register1
  always @(posedge clk or posedge reset)
    begin : idxpipelineregister_process
      if (reset == 1'b1) begin
        idxpipereg1 <= 2'b00;
      end
      else begin
        if (enb) begin
          idxpipereg1 <= idx4;
        end
      end
    end



  // Traceback Component5
  TracebackUnit u_TracebackComp_inst5 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(decpipereg1[0]),  // ufix1
                                       .dec_in_1(decpipereg1[1]),  // ufix1
                                       .dec_in_2(decpipereg1[2]),  // ufix1
                                       .dec_in_3(decpipereg1[3]),  // ufix1
                                       .idx_in(idxpipereg1),  // ufix2
                                       .dec_out_0(dec5_0),  // ufix1
                                       .dec_out_1(dec5_1),  // ufix1
                                       .dec_out_2(dec5_2),  // ufix1
                                       .dec_out_3(dec5_3),  // ufix1
                                       .idx_out(idx5)  // ufix2
                                       );

  // Traceback Component6
  TracebackUnit u_TracebackComp_inst6 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(dec5_0),  // ufix1
                                       .dec_in_1(dec5_1),  // ufix1
                                       .dec_in_2(dec5_2),  // ufix1
                                       .dec_in_3(dec5_3),  // ufix1
                                       .idx_in(idx5),  // ufix2
                                       .dec_out_0(dec6_0),  // ufix1
                                       .dec_out_1(dec6_1),  // ufix1
                                       .dec_out_2(dec6_2),  // ufix1
                                       .dec_out_3(dec6_3),  // ufix1
                                       .idx_out(idx6)  // ufix2
                                       );

  // Traceback Component7
  TracebackUnit u_TracebackComp_inst7 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(dec6_0),  // ufix1
                                       .dec_in_1(dec6_1),  // ufix1
                                       .dec_in_2(dec6_2),  // ufix1
                                       .dec_in_3(dec6_3),  // ufix1
                                       .idx_in(idx6),  // ufix2
                                       .dec_out_0(dec7_0),  // ufix1
                                       .dec_out_1(dec7_1),  // ufix1
                                       .dec_out_2(dec7_2),  // ufix1
                                       .dec_out_3(dec7_3),  // ufix1
                                       .idx_out(idx7)  // ufix2
                                       );

  // Traceback Component8
  TracebackUnit u_TracebackComp_inst8 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(dec7_0),  // ufix1
                                       .dec_in_1(dec7_1),  // ufix1
                                       .dec_in_2(dec7_2),  // ufix1
                                       .dec_in_3(dec7_3),  // ufix1
                                       .idx_in(idx7),  // ufix2
                                       .dec_out_0(dec8_0),  // ufix1
                                       .dec_out_1(dec8_1),  // ufix1
                                       .dec_out_2(dec8_2),  // ufix1
                                       .dec_out_3(dec8_3),  // ufix1
                                       .idx_out(idx8)  // ufix2
                                       );

  assign dec8[0] = dec8_0;
  assign dec8[1] = dec8_1;
  assign dec8[2] = dec8_2;
  assign dec8[3] = dec8_3;

  // Decision pipeline register2
  always @(posedge clk or posedge reset)
    begin : decpipelineregister_1_process
      if (reset == 1'b1) begin
        decpipereg2[0] <= 1'b0;
        decpipereg2[1] <= 1'b0;
        decpipereg2[2] <= 1'b0;
        decpipereg2[3] <= 1'b0;
      end
      else begin
        if (enb) begin
          decpipereg2[0] <= dec8[0];
          decpipereg2[1] <= dec8[1];
          decpipereg2[2] <= dec8[2];
          decpipereg2[3] <= dec8[3];
        end
      end
    end



  // Index pipeline register2
  always @(posedge clk or posedge reset)
    begin : idxpipelineregister_1_process
      if (reset == 1'b1) begin
        idxpipereg2 <= 2'b00;
      end
      else begin
        if (enb) begin
          idxpipereg2 <= idx8;
        end
      end
    end



  // Traceback Component9
  TracebackUnit u_TracebackComp_inst9 (.clk(clk),
                                       .reset(reset),
                                       .enb(enb),
                                       .dec_in_0(decpipereg2[0]),  // ufix1
                                       .dec_in_1(decpipereg2[1]),  // ufix1
                                       .dec_in_2(decpipereg2[2]),  // ufix1
                                       .dec_in_3(decpipereg2[3]),  // ufix1
                                       .idx_in(idxpipereg2),  // ufix2
                                       .dec_out_0(dec9_0),  // ufix1
                                       .dec_out_1(dec9_1),  // ufix1
                                       .dec_out_2(dec9_2),  // ufix1
                                       .dec_out_3(dec9_3),  // ufix1
                                       .idx_out(idx9)  // ufix2
                                       );

  // Traceback Component10
  TracebackUnit u_TracebackComp_inst10 (.clk(clk),
                                        .reset(reset),
                                        .enb(enb),
                                        .dec_in_0(dec9_0),  // ufix1
                                        .dec_in_1(dec9_1),  // ufix1
                                        .dec_in_2(dec9_2),  // ufix1
                                        .dec_in_3(dec9_3),  // ufix1
                                        .idx_in(idx9),  // ufix2
                                        .dec_out_0(dec10_0),  // ufix1
                                        .dec_out_1(dec10_1),  // ufix1
                                        .dec_out_2(dec10_2),  // ufix1
                                        .dec_out_3(dec10_3),  // ufix1
                                        .idx_out(idx10)  // ufix2
                                        );

  // Traceback Component11
  TracebackUnit u_TracebackComp_inst11 (.clk(clk),
                                        .reset(reset),
                                        .enb(enb),
                                        .dec_in_0(dec10_0),  // ufix1
                                        .dec_in_1(dec10_1),  // ufix1
                                        .dec_in_2(dec10_2),  // ufix1
                                        .dec_in_3(dec10_3),  // ufix1
                                        .idx_in(idx10),  // ufix2
                                        .dec_out_0(dec11_0),  // ufix1
                                        .dec_out_1(dec11_1),  // ufix1
                                        .dec_out_2(dec11_2),  // ufix1
                                        .dec_out_3(dec11_3),  // ufix1
                                        .idx_out(idx11)  // ufix2
                                        );

  // Traceback Component12
  TracebackUnit u_TracebackComp_inst12 (.clk(clk),
                                        .reset(reset),
                                        .enb(enb),
                                        .dec_in_0(dec11_0),  // ufix1
                                        .dec_in_1(dec11_1),  // ufix1
                                        .dec_in_2(dec11_2),  // ufix1
                                        .dec_in_3(dec11_3),  // ufix1
                                        .idx_in(idx11),  // ufix2
                                        .dec_out_0(dec12_0),  // ufix1
                                        .dec_out_1(dec12_1),  // ufix1
                                        .dec_out_2(dec12_2),  // ufix1
                                        .dec_out_3(dec12_3),  // ufix1
                                        .idx_out(idx12)  // ufix2
                                        );

  assign dec12[0] = dec12_0;
  assign dec12[1] = dec12_1;
  assign dec12[2] = dec12_2;
  assign dec12[3] = dec12_3;

  // Decision pipeline register3
  always @(posedge clk or posedge reset)
    begin : decpipelineregister_2_process
      if (reset == 1'b1) begin
        decpipereg3[0] <= 1'b0;
        decpipereg3[1] <= 1'b0;
        decpipereg3[2] <= 1'b0;
        decpipereg3[3] <= 1'b0;
      end
      else begin
        if (enb) begin
          decpipereg3[0] <= dec12[0];
          decpipereg3[1] <= dec12[1];
          decpipereg3[2] <= dec12[2];
          decpipereg3[3] <= dec12[3];
        end
      end
    end



  // Index pipeline register3
  always @(posedge clk or posedge reset)
    begin : idxpipelineregister_2_process
      if (reset == 1'b1) begin
        idxpipereg3 <= 2'b00;
      end
      else begin
        if (enb) begin
          idxpipereg3 <= idx12;
        end
      end
    end



  // Traceback Component13
  TracebackUnit u_TracebackComp_inst13 (.clk(clk),
                                        .reset(reset),
                                        .enb(enb),
                                        .dec_in_0(decpipereg3[0]),  // ufix1
                                        .dec_in_1(decpipereg3[1]),  // ufix1
                                        .dec_in_2(decpipereg3[2]),  // ufix1
                                        .dec_in_3(decpipereg3[3]),  // ufix1
                                        .idx_in(idxpipereg3),  // ufix2
                                        .dec_out_0(dec13_0),  // ufix1
                                        .dec_out_1(dec13_1),  // ufix1
                                        .dec_out_2(dec13_2),  // ufix1
                                        .dec_out_3(dec13_3),  // ufix1
                                        .idx_out(idx13)  // ufix2
                                        );

  // Traceback Component14
  TracebackUnit u_TracebackComp_inst14 (.clk(clk),
                                        .reset(reset),
                                        .enb(enb),
                                        .dec_in_0(dec13_0),  // ufix1
                                        .dec_in_1(dec13_1),  // ufix1
                                        .dec_in_2(dec13_2),  // ufix1
                                        .dec_in_3(dec13_3),  // ufix1
                                        .idx_in(idx13),  // ufix2
                                        .dec_out_0(dec14_0),  // ufix1
                                        .dec_out_1(dec14_1),  // ufix1
                                        .dec_out_2(dec14_2),  // ufix1
                                        .dec_out_3(dec14_3),  // ufix1
                                        .idx_out(idx14)  // ufix2
                                        );

  // Traceback Component15
  TracebackUnit u_TracebackComp_inst15 (.clk(clk),
                                        .reset(reset),
                                        .enb(enb),
                                        .dec_in_0(dec14_0),  // ufix1
                                        .dec_in_1(dec14_1),  // ufix1
                                        .dec_in_2(dec14_2),  // ufix1
                                        .dec_in_3(dec14_3),  // ufix1
                                        .idx_in(idx14),  // ufix2
                                        .dec_out_0(dec15_0),  // ufix1
                                        .dec_out_1(dec15_1),  // ufix1
                                        .dec_out_2(dec15_2),  // ufix1
                                        .dec_out_3(dec15_3),  // ufix1
                                        .idx_out(idx15)  // ufix2
                                        );

  // Traceback Component16
  // Decision pipeline register4
  TracebackUnit u_TracebackComp_inst16 (.clk(clk),
                                        .reset(reset),
                                        .enb(enb),
                                        .dec_in_0(dec15_0),  // ufix1
                                        .dec_in_1(dec15_1),  // ufix1
                                        .dec_in_2(dec15_2),  // ufix1
                                        .dec_in_3(dec15_3),  // ufix1
                                        .idx_in(idx15),  // ufix2
                                        .dec_out_0(dec16deadOut_0),  // ufix1
                                        .dec_out_1(dec16deadOut_1),  // ufix1
                                        .dec_out_2(dec16deadOut_2),  // ufix1
                                        .dec_out_3(dec16deadOut_3),  // ufix1
                                        .idx_out(idx16)  // ufix2
                                        );

  // Index pipeline register4
  always @(posedge clk or posedge reset)
    begin : idxpipelineregister_3_process
      if (reset == 1'b1) begin
        idxpipereg4 <= 2'b00;
      end
      else begin
        if (enb) begin
          idxpipereg4 <= idx16;
        end
      end
    end



  assign decoded = idxpipereg4[1];



endmodule  // Traceback

