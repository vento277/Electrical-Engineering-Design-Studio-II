// -------------------------------------------------------------
// 
// File Name: C:\Users\TEMP\Desktop\fina\hdlcoder_commviterbi\ACSEngine.v
// Created: 2024-06-14 20:40:48
// 
// Generated by MATLAB 9.13 and HDL Coder 4.0
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: ACSEngine
// Source Path: hdlcoder_commviterbi/Subsystem/Viterbi Decoder/ACS/ACSEngine
// Hierarchy Level: 3
// 
// Instantiate the ACS units
// Pass the right state metric and branch metrics to each instance
// Gather the output of each instance to send as output
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module ACSEngine
          (branchMetric_0,
           branchMetric_1,
           branchMetric_2,
           branchMetric_3,
           stateMetric_0,
           stateMetric_1,
           stateMetric_2,
           stateMetric_3,
           acsDecision_0,
           acsDecision_1,
           acsDecision_2,
           acsDecision_3,
           nextStateMetric_0,
           nextStateMetric_1,
           nextStateMetric_2,
           nextStateMetric_3);


  input   [3:0] branchMetric_0;  // ufix4
  input   [3:0] branchMetric_1;  // ufix4
  input   [3:0] branchMetric_2;  // ufix4
  input   [3:0] branchMetric_3;  // ufix4
  input   [3:0] stateMetric_0;  // ufix4
  input   [3:0] stateMetric_1;  // ufix4
  input   [3:0] stateMetric_2;  // ufix4
  input   [3:0] stateMetric_3;  // ufix4
  output  acsDecision_0;  // ufix1
  output  acsDecision_1;  // ufix1
  output  acsDecision_2;  // ufix1
  output  acsDecision_3;  // ufix1
  output  [3:0] nextStateMetric_0;  // ufix4
  output  [3:0] nextStateMetric_1;  // ufix4
  output  [3:0] nextStateMetric_2;  // ufix4
  output  [3:0] nextStateMetric_3;  // ufix4


  wire acsdec_entry0;  // ufix1
  wire [3:0] nstMet_entry0;  // ufix4
  wire acsdec_entry1;  // ufix1
  wire [3:0] nstMet_entry1;  // ufix4
  wire acsdec_entry2;  // ufix1
  wire [3:0] nstMet_entry2;  // ufix4
  wire acsdec_entry3;  // ufix1
  wire [3:0] nstMet_entry3;  // ufix4


  // ACSUnit1
  ACSUnit u_ACSUnit1 (.bmet0(branchMetric_0),  // ufix4
                      .bmet1(branchMetric_3),  // ufix4
                      .smet0(stateMetric_0),  // ufix4
                      .smet1(stateMetric_1),  // ufix4
                      .branchdec(acsdec_entry0),  // ufix1
                      .nextsmet(nstMet_entry0)  // ufix4
                      );

  assign acsDecision_0 = acsdec_entry0;

  // ACSUnit2
  ACSUnit u_ACSUnit2 (.bmet0(branchMetric_2),  // ufix4
                      .bmet1(branchMetric_1),  // ufix4
                      .smet0(stateMetric_2),  // ufix4
                      .smet1(stateMetric_3),  // ufix4
                      .branchdec(acsdec_entry1),  // ufix1
                      .nextsmet(nstMet_entry1)  // ufix4
                      );

  assign acsDecision_1 = acsdec_entry1;

  // ACSUnit3
  ACSUnit u_ACSUnit3 (.bmet0(branchMetric_3),  // ufix4
                      .bmet1(branchMetric_0),  // ufix4
                      .smet0(stateMetric_0),  // ufix4
                      .smet1(stateMetric_1),  // ufix4
                      .branchdec(acsdec_entry2),  // ufix1
                      .nextsmet(nstMet_entry2)  // ufix4
                      );

  assign acsDecision_2 = acsdec_entry2;

  // ACSUnit4
  ACSUnit u_ACSUnit4 (.bmet0(branchMetric_1),  // ufix4
                      .bmet1(branchMetric_2),  // ufix4
                      .smet0(stateMetric_2),  // ufix4
                      .smet1(stateMetric_3),  // ufix4
                      .branchdec(acsdec_entry3),  // ufix1
                      .nextsmet(nstMet_entry3)  // ufix4
                      );

  assign acsDecision_3 = acsdec_entry3;

  assign nextStateMetric_0 = nstMet_entry0;

  assign nextStateMetric_1 = nstMet_entry1;

  assign nextStateMetric_2 = nstMet_entry2;

  assign nextStateMetric_3 = nstMet_entry3;

endmodule  // ACSEngine

