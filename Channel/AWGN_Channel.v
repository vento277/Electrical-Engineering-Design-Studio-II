/*--------------------------------------------------------------------------
    2 dB AWGN Module
    takes in 8 bit input and adds gaussian noise with SNR of 2 dB. Values
    preloaded into M10K memory from MIF file generated by MATLAB script.
--------------------------------------------------------------------------*/  
module AWGN_2(data_in, data_out, clk, reset);

    //IO signals
    input signed [7:0] data_in;
    output signed [7:0] data_out;
    input clk, reset;

    //Internal signals
    wire [15:0] counter;
    wire signed [7:0] noise;

    //setting counter to iterate through random array
    /*always@(posedge(clk)) begin
        if(reset == 1) begin
            counter = 0;
        end
        else begin
            counter = counter + 1;
            if(counter == 16'hFFFF) begin
                counter = 0;
            end
        end
    end*/
	 
	 LFSR dut(clk, counter);

    //instantiating memory loaded with 9 dB gaussian values
    S_2 Gaussian_2(.address(counter),.clock(clk),.data(8'd0),.wren(1'b0),.q(noise));

    //adding noise to output
    assign data_out = data_in + noise;

endmodule

/*--------------------------------------------------------------------------
    9 dB AWGN Module
    takes in 8 bit input and adds gaussian noise with SNR of 9 dB. Values
    preloaded into M10K memory from MIF file generated by MATLAB script.
--------------------------------------------------------------------------*/  
module AWGN_9(data_in, data_out, clk, reset);

    //IO signals
    input signed [7:0] data_in;
    output signed [7:0] data_out;
    input clk, reset;

    //Internal signals
    wire [15:0] counter;
    wire signed [7:0] noise;

    //setting counter to iterate through random array
    /*always@(posedge(clk)) begin
        if(reset == 1) begin
            counter = 0;
        end
        else begin
            counter = counter + 1;
            if(counter == 16'hFFFF) begin
                counter = 0;
            end
        end
    end*/
	 
	 LFSR dut(clk, counter);

    //instantiating memory loaded with 9 dB gaussian values
    S_9 Gaussian_9(.address(counter),.clock(clk),.data(8'd0),.wren(1'b0),.q(noise));

    //adding noise to output
    assign data_out = data_in + noise;

endmodule

/*--------------------------------------------------------------------------
    21 dB AWGN Module
    takes in 8 bit input and adds gaussian noise with SNR of 21 dB. Values
    preloaded into M10K memory from MIF file generated by MATLAB script.
--------------------------------------------------------------------------*/
module AWGN_21(data_in, data_out, clk, reset);

    //IO signals
    input signed [7:0] data_in;
    output signed [7:0] data_out;
    input clk, reset;

    //Internal signals
    wire [15:0] counter;
    wire signed [7:0] noise;

    //setting counter to iterate through random array
    /*always@(posedge(clk)) begin
        if(reset == 1) begin
            counter = 0;
        end
        else begin
            counter = counter + 1;
            if(counter == 16'd65535) begin
                counter = 0;
            end
        end
    end*/
	 
	 LFSR dut(clk, counter);
    
    //instantiating memory loaded with 21 dB gaussian values
    S_21 Gaussian_21(.address(counter),.clock(clk),.data(8'd0),.wren(1'b0),.q(noise));

    //adding gaussian noise to output
    assign data_out = data_in + noise;


endmodule